<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>friction = 0.5;//soft movement
hp = global.maxhp;//hit points start
hphud = hp;
sp = 0;//shield points
sphud = 0;

hot = 0;//hud hot
heat = 0;//real hot
td = 350;//triple shot first direction
click=0;//hot add when press space

hotad = 0.8;//add hot
hotadfast = 1;//add hot faster
hotdec = 0.5;//decrease hot
hotdecfast = 1;//descrease hot faster

spd = 1.5;//speed
maxspd = 6;//speed limit
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///nothing
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Moves

//pause
if (global.pause == 1) {
    friction = 100;
    exit; 
}
else friction = 0.5;

if (keyboard_check(vk_down)) &amp;&amp; (global.players == 1) || (keyboard_check(ord('S'))) vspeed += spd;
if (keyboard_check(vk_up)) &amp;&amp; (global.players == 1) || (keyboard_check(ord('W'))) vspeed -= spd;
if (keyboard_check(vk_right)) &amp;&amp; (global.players == 1) || (keyboard_check(ord('D'))) hspeed += spd;
if (keyboard_check(vk_left)) &amp;&amp; (global.players == 1) || (keyboard_check(ord('A'))) hspeed -= spd;


speed = clamp(speed, 0, maxspd);
if (instance_exists(obj_mboss)){x = clamp(x,40,obj_mboss.x-150);}
else {x = clamp(x,40,view_wview[1]-40);}
y = clamp(y,105,688); 

if (global.pupspd &gt; 0) {
    spd = 2;
    maxspd = 7.2;
}
else {
    spd = 1.5;
    maxspd = 6;
}
//low hp sound
if (global.pause ==0){
    if (hp&lt;=3 &amp;&amp; global.sfx==0 &amp;&amp; instance_exists(obj_player) &amp;&amp; !audio_is_playing(snd_lowhp) &amp;&amp; room==rm_infinity){
        audio_play_sound(snd_lowhp,0.5,false);
    }
}




hp = clamp(hp,0,global.maxhp);
if (hp&lt;=0) {
    var i = random_range(1,45);
    repeat (8) {
    shard[i] = instance_create(x,y,obj_playershard);
    shard[i].direction = i;
    i += 45; }
    
    if global.sfx==0 {audio_play_sound(snd_kill,1,false); audio_play_sound(snd_lose,100,false);}

    
    instance_destroy();
}

if (sp &gt; 0) sprite_index = spr_pshield; else sprite_index = spr_player;
sp = clamp(sp,0,global.maxsp);

//hud hp n sp
if (global.pause ==0){
if (hphud &lt; hp) {hphud += 0.2;}
else if (hphud &gt; hp || hp == 0) {hphud -= 0.2;}
if (hphud&lt;0) {hphud=0;}

if (sphud &lt; sp) {sphud += 0.2;}
else if (sphud &gt; sp || sp == 0) {sphud -= 0.2;}
if (sphud&lt;0) {sphud=0;}}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shot

hotad = clamp(hotad,0.55,1);

//pause
if (global.pause == 1) exit;

 if (click&gt;0) {hot+=hotad*click;click-=0.5;}
 click = clamp(click,0,16);
 
if (keyboard_check_pressed(vk_space))||(keyboard_check_pressed(vk_control)){click +=4;} 

if ((keyboard_check(vk_space)) || (keyboard_check(vk_control))) &amp;&amp; (global.players == 1) {
    hot += hotad;
    
    if (hot &gt; global.hotlimit) hot += hotadfast;
    
    if (alarm[0] == -1) &amp;&amp; (hot &lt; global.maxheat){
        alarm[0] = 8;
        
        if global.sfx==0{
        audio_play_sound(snd_shoot,1,false);}
        
        //Normal Shot
        if (global.puptp &lt;= 0) &amp;&amp; (global.pupdmg &lt;= 0){
            b = instance_create(x,y, obj_bullet);
            b.direction = 0;
        }
        //Damage Shot
        if (global.puptp &lt;= 0) &amp;&amp; (global.pupdmg &gt; 0){
            b = instance_create(x,y, obj_dmgbullet);
            b.direction = 0;
        }
        
        //Triple Damage Shot
        if (global.puptp &gt; 0) &amp;&amp; (global.pupdmg &gt; 0){
            repeat(3) {
                b[td] = instance_create(x,y,obj_dmgbullet);
                b[td].direction = td;
                td += 10;
            }
        }
    
        //Triple Shot
        if (global.puptp &gt; 0) &amp;&amp; (global.pupdmg &lt;= 0){
            repeat(3) {
                b[td] = instance_create(x,y,obj_bullet);
                b[td].direction = td;
                td += 10;
            }
        } 
    }     
} 
else { //Decrease Heat
    if (hot &lt;= global.hotlimit) hot -= hotdecfast;
    if (hot &gt; global.hotlimit) hot -= hotdec;
   
}

if (global.sfx==0 &amp;&amp; instance_exists(obj_player) &amp;&amp; room==rm_infinity){
    if (hot &gt;= global.maxheat){
        if (!audio_is_playing(snd_overload)){audio_play_sound(snd_overload,1,false);}
    }
}


hot = clamp(hot,0,global.hotlimit+50); 
if (hot &lt;= global.maxheat) heat = hot; else heat = global.maxheat;  

if (td &gt;= 10) td = 350;

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
