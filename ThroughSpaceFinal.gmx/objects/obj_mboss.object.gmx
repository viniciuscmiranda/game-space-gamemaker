<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mboss</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hspeed = -1;
vspeed = 0.5;
spd = 1;
vspd = 0.5;
hp = 5;//hit points
hphud = 0;//hp hud
scrad = 300;//score +
hardad = 35;//hard +
shotdirect = 150;//first shot direction
d = shotdirect;//shot direction mutable
dmax = 210;//last shot direction
shottime = 200;//shot time
hitdmg = 0;//players hp when hits
maxx = 1000;//max X
maxdrop=0;
shield =0;
if instance_exists(obj_player) player = obj_player;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shot
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hit Player
if instance_exists(obj_player){  
    hit = instance_place(x,y,player);
    if (hit != noone) {
    hit.hp = hitdmg;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///General
global.mboss = 0;



//Hp
 if ((shield &lt;=0) &amp;&amp; (hp &lt; 151)) {
    hp += 0.6; //120/global.hard
    if (hp &lt; 4) hp = 4;
    
}

if (hp&gt;=150){
    shield ++;
}


hphud += 0.7 //135/global.hard
hphud = clamp(hphud,0,150)



if (hp &gt; 100) sprite_index = spr_mboss;
if (hp = clamp(hp,51,100) &amp;&amp; hphud == 150) sprite_index = spr_mbossd1;
if (hp &lt; 51 &amp;&amp; hphud == 150) sprite_index = spr_mbossd2;

if (hp&lt;=0 ) {
   if instance_exists(obj_player) {global.scr += scrad;}
    global.hard -= hardad; 
    
    if global.sfx==0 audio_play_sound(snd_bosskill,1,false);

    var i = random_range(1,22.5);
    repeat (16) {
    es[i] = instance_create(x,y,obj_mbossshard);
    es[i].direction = i;
    i += 22.5;
    }
    
    var droppup = random_range(0,global.mbosskill);
    if (droppup &lt; 1){ instance_create(x,y,obj_pupmboss);}
    global.mbosskill ++;
    instance_destroy();
}

if instance_exists(obj_player){
     if (shield &gt;0) { 
        //Normal Shot
        if (alarm[0] == 60) {
           
           if (global.sfx==0){
            audio_play_sound(snd_bossshoot,10,false);}
            
        repeat(7) {
            eb[d] = instance_create(x,y,obj_bbullet);
            eb[d].direction = d;
            d += 10;
            } 
      }
      
       //Double Shot   
        if (alarm[0] == 30) &amp;&amp; (hp &lt; 101) {
            if (global.sfx==0){
        
                audio_play_sound(snd_bossshoot,10,false);}

           repeat(8) {
            eb[d] = instance_create(x,y,obj_bbullet);
            eb[d].direction = d-5;
            d += 10;
        }  
    }
        //Triple Shot   
        if (alarm[0] == 5) &amp;&amp; (hp &lt; 51){
            if (global.sfx==0){
            
                audio_play_sound(snd_bossshoot,10,false);}

            repeat(7) {
            eb[d] = instance_create(x,y,obj_bbullet);
            eb[d].direction = d;
            d += 10;
            }
        }
    }
}

if (d &gt; dmax) d = shotdirect;
if (alarm[0] == -1) alarm[0] = shottime;


//Move  
if instance_exists(obj_player) x = clamp(x,maxx,room_width); 

//Go Up and Down
if (hp &gt; 100) vspd = 0.5;
if (hp &lt; 101) vspd = 0.7;
if (hp &lt; 51) vspd = 0.8;

if (y &lt; 100) vspeed = vspd;
if (y &gt; 620) vspeed = -vspd;



if (x &lt; -16) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
